version: "3.9"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: langextract
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  minio:
    image: minio/minio:RELEASE.2024-04-18T19-09-19Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:0.3.12
    privileged: true
    volumes:
      - ollama:/root/.ollama
    ports:
      - "11434:11434"
    healthcheck:
      test: ["CMD", "ollama", "--version"]
      interval: 30s
      timeout: 10s
      retries: 5

  api:
    build:
      context: ..
      dockerfile: infrastructure/node.Dockerfile
      args:
        APP_DIR: apps/api
    environment:
      NODE_ENV: production
      PORT: ${API_PORT:-3001}
      REDIS_URL: redis://redis:6379
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "${API_PORT:-3001}:3001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  worker:
    build:
      context: ..
      dockerfile: infrastructure/node.Dockerfile
      args:
        APP_DIR: apps/worker
    environment:
      NODE_ENV: production
      REDIS_URL: redis://redis:6379
      WORKER_HTTP_PORT: ${WORKER_HTTP_PORT:-3002}
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "${WORKER_HTTP_PORT:-3002}:3002"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  web:
    build:
      context: ..
      dockerfile: infrastructure/node.Dockerfile
      args:
        APP_DIR: apps/web
    environment:
      NODE_ENV: production
      PORT: ${WEB_PORT:-3000}
    ports:
      - "${WEB_PORT:-3000}:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  ollama: {}

